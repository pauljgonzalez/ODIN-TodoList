(()=>{"use strict";var n={365:(n,e,t)=>{t.d(e,{A:()=>c});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,"/* * {\n    outline: red solid 1px;\n}    */\nbody{\n    --backgroundColor : #fffffe;\n    --textColor : #16161a;\n    --accentColor : #a58bf4;\n    --accentColorTwo : #d3d3d2;\n    --transition-delay : .5s;\n\n    /* transition: var(--transition-delay);   */\n    \n    height: 100vh;\n    font-size: 18px;\n    margin: 0;\n    \n    background-color: var(--backgroundColor);\n    color: var(--textColor);\n    \n}\n.dark{\n    --backgroundColor : #d3d3d2;\n    --textColor : #F5F5F5;\n    --accentColor : #fffffe;\n    --accentColorTwo : #5a41a5;\n    \n}\nbutton {\n    background-color: var(--accentColor);\n    color: #16161a;\n    border: none;\n    padding: 8px;\n    border-radius: 16px;\n    cursor: pointer;\n}\n.mainContainer {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: .15fr repeat(4, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 0px;\n    height: 100%;\n}\n.sidebar { \n    grid-area: 2 / 1 / 6 / 2;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5%;\n    background-color: var(--accentColorTwo);\n}\n.header { \n    grid-area: 1 / 1 / 2 / 6; \n    background-color: var(--accentColorTwo);\n}\n.mainSection { \n    grid-area: 2 / 2 / 6 / 6; \n    color: #16161a;\n    display: flex;\n    flex-direction: column;\n    padding: 2%;\n    gap: 5px;\n}\n#updateProjectTitle{\n    font-size: 3rem;\n    font-weight: bold;\n}\n#updateProjectDescription{\n    font-size: 1.5rem;\n    margin-left: 1.5%;\n}\n.projectTitleArea{\n    background-color: var(--accentColor);\n    border-radius: 16px;\n    padding: 10px;\n}\n\n.highPrio{\n    outline: solid 3px red;\n}\n.normalPrio{\n    outline: solid 3px orange;\n}\n.lowPrio{\n    outline: solid 3px blue;\n}\n.taskContainer{\n    /* display: flex;\n    flex-direction: column; */\n    display: grid;\n    grid-template-columns: 3% 97%;\n    grid-template-rows: repeat(2, 1fr);\n    grid-column-gap: 10px;\n    grid-row-gap: 5px;\n    \n    padding: 5px;\n    background-color: var(--accentColor);\n    border-radius: 16px;\n}\n.taskTitle{\n    font-size: 1.75rem;\n    grid-area: 1 / 2 / 2 / 3;\n}\n.taskDescription{\n    font-size: 1.15rem;\n    margin-left: 3%;\n    grid-area: 2 / 2 / 3 / 3;\n}\n.taskCloseButton{\n    background-color: var(--backgroundColor);\n    grid-area: 1 / 1 / 3 / 2;\n    height: 80%;\n    align-self: center;\n}\n#tasksUpdate{\n    margin-top: 4%;\n    display: flex;\n    flex-direction: column;\n    gap: 2.5rem;\n}\n.options{\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n}\n.sidebarSection{\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.largeText{\n    font-size: 2rem;\n    font-weight: bold;\n}\n.project{\n    font-size: 1.25rem;\n}\n.modal {\n    padding: 2em;\n    max-width: 60ch;\n    width: 50%;\n    border: 0;\n    box-shadow: 0 0 1em rgb(0 0 0 / .3);\n    position: relative;\n\n    /* & > * {\n      margin: 0 0 0.5rem 0;\n    } */\n}\n.modal-container{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.modal-container>.close-button{\n    position: relative;\n    left: 30%;\n    bottom: 2vh;\n}\n.form{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 16px;\n}\n.formContainer{\n    display: flex;\n    gap: 10px;\n}\ninput,#taskPriority,#taskProject {\n    margin-left:10px ;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;;MAEM;AACN;IACI,2BAA2B;IAC3B,qBAAqB;IACrB,uBAAuB;IACvB,0BAA0B;IAC1B,wBAAwB;;IAExB,2CAA2C;;IAE3C,aAAa;IACb,eAAe;IACf,SAAS;;IAET,wCAAwC;IACxC,uBAAuB;;AAE3B;AACA;IACI,2BAA2B;IAC3B,qBAAqB;IACrB,uBAAuB;IACvB,0BAA0B;;AAE9B;AACA;IACI,oCAAoC;IACpC,cAAc;IACd,YAAY;IACZ,YAAY;IACZ,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,aAAa;IACb,qCAAqC;IACrC,wCAAwC;IACxC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AAChB;AACA;IACI,wBAAwB;IACxB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,uCAAuC;AAC3C;AACA;IACI,wBAAwB;IACxB,uCAAuC;AAC3C;AACA;IACI,wBAAwB;IACxB,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,QAAQ;AACZ;AACA;IACI,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;AACA;IACI,oCAAoC;IACpC,mBAAmB;IACnB,aAAa;AACjB;;AAEA;IACI,sBAAsB;AAC1B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI;6BACyB;IACzB,aAAa;IACb,6BAA6B;IAC7B,kCAAkC;IAClC,qBAAqB;IACrB,iBAAiB;;IAEjB,YAAY;IACZ,oCAAoC;IACpC,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB,wBAAwB;AAC5B;AACA;IACI,kBAAkB;IAClB,eAAe;IACf,wBAAwB;AAC5B;AACA;IACI,wCAAwC;IACxC,wBAAwB;IACxB,WAAW;IACX,kBAAkB;AACtB;AACA;IACI,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;AACA;IACI,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,YAAY;IACZ,eAAe;IACf,UAAU;IACV,SAAS;IACT,mCAAmC;IACnC,kBAAkB;;IAElB;;OAEG;AACP;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;AACf;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,2BAA2B;IAC3B,SAAS;AACb;AACA;IACI,aAAa;IACb,SAAS;AACb;AACA;IACI,iBAAiB;AACrB",sourcesContent:["/* * {\n    outline: red solid 1px;\n}    */\nbody{\n    --backgroundColor : #fffffe;\n    --textColor : #16161a;\n    --accentColor : #a58bf4;\n    --accentColorTwo : #d3d3d2;\n    --transition-delay : .5s;\n\n    /* transition: var(--transition-delay);   */\n    \n    height: 100vh;\n    font-size: 18px;\n    margin: 0;\n    \n    background-color: var(--backgroundColor);\n    color: var(--textColor);\n    \n}\n.dark{\n    --backgroundColor : #d3d3d2;\n    --textColor : #F5F5F5;\n    --accentColor : #fffffe;\n    --accentColorTwo : #5a41a5;\n    \n}\nbutton {\n    background-color: var(--accentColor);\n    color: #16161a;\n    border: none;\n    padding: 8px;\n    border-radius: 16px;\n    cursor: pointer;\n}\n.mainContainer {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: .15fr repeat(4, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 0px;\n    height: 100%;\n}\n.sidebar { \n    grid-area: 2 / 1 / 6 / 2;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5%;\n    background-color: var(--accentColorTwo);\n}\n.header { \n    grid-area: 1 / 1 / 2 / 6; \n    background-color: var(--accentColorTwo);\n}\n.mainSection { \n    grid-area: 2 / 2 / 6 / 6; \n    color: #16161a;\n    display: flex;\n    flex-direction: column;\n    padding: 2%;\n    gap: 5px;\n}\n#updateProjectTitle{\n    font-size: 3rem;\n    font-weight: bold;\n}\n#updateProjectDescription{\n    font-size: 1.5rem;\n    margin-left: 1.5%;\n}\n.projectTitleArea{\n    background-color: var(--accentColor);\n    border-radius: 16px;\n    padding: 10px;\n}\n\n.highPrio{\n    outline: solid 3px red;\n}\n.normalPrio{\n    outline: solid 3px orange;\n}\n.lowPrio{\n    outline: solid 3px blue;\n}\n.taskContainer{\n    /* display: flex;\n    flex-direction: column; */\n    display: grid;\n    grid-template-columns: 3% 97%;\n    grid-template-rows: repeat(2, 1fr);\n    grid-column-gap: 10px;\n    grid-row-gap: 5px;\n    \n    padding: 5px;\n    background-color: var(--accentColor);\n    border-radius: 16px;\n}\n.taskTitle{\n    font-size: 1.75rem;\n    grid-area: 1 / 2 / 2 / 3;\n}\n.taskDescription{\n    font-size: 1.15rem;\n    margin-left: 3%;\n    grid-area: 2 / 2 / 3 / 3;\n}\n.taskCloseButton{\n    background-color: var(--backgroundColor);\n    grid-area: 1 / 1 / 3 / 2;\n    height: 80%;\n    align-self: center;\n}\n#tasksUpdate{\n    margin-top: 4%;\n    display: flex;\n    flex-direction: column;\n    gap: 2.5rem;\n}\n.options{\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n}\n.sidebarSection{\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.largeText{\n    font-size: 2rem;\n    font-weight: bold;\n}\n.project{\n    font-size: 1.25rem;\n}\n.modal {\n    padding: 2em;\n    max-width: 60ch;\n    width: 50%;\n    border: 0;\n    box-shadow: 0 0 1em rgb(0 0 0 / .3);\n    position: relative;\n\n    /* & > * {\n      margin: 0 0 0.5rem 0;\n    } */\n}\n.modal-container{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.modal-container>.close-button{\n    position: relative;\n    left: 30%;\n    bottom: 2vh;\n}\n.form{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 16px;\n}\n.formContainer{\n    display: flex;\n    gap: 10px;\n}\ninput,#taskPriority,#taskProject {\n    margin-left:10px ;\n}\n"],sourceRoot:""}]);const c=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var s=[].concat(n[d]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],d=o.base?A[0]+o.base:A[0],s=a[d]||0,l="".concat(d," ").concat(s);a[d]=s+1;var u=t(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var C=r(p,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=o(n,r),d=0;d<a.length;d++){var s=t(a[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}a=A}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),a=t(659),i=t.n(a),c=t(56),A=t.n(c),d=t(540),s=t.n(d),l=t(113),u=t.n(l),p=t(365),C={};C.styleTagTransform=u(),C.setAttributes=A(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=s(),e()(p.A,C),p.A&&p.A.locals&&p.A.locals;const m={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let f;const g=new Uint8Array(16);function B(){if(!f&&(f="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!f))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return f(g)}const I=[];for(let n=0;n<256;++n)I.push((n+256).toString(16).slice(1));const y=function(n,e,t){if(m.randomUUID&&!e&&!n)return m.randomUUID();const o=(n=n||{}).random||(n.rng||B)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){t=t||0;for(let n=0;n<16;++n)e[t+n]=o[n];return e}return function(n,e=0){return I[n[e+0]]+I[n[e+1]]+I[n[e+2]]+I[n[e+3]]+"-"+I[n[e+4]]+I[n[e+5]]+"-"+I[n[e+6]]+I[n[e+7]]+"-"+I[n[e+8]]+I[n[e+9]]+"-"+I[n[e+10]]+I[n[e+11]]+I[n[e+12]]+I[n[e+13]]+I[n[e+14]]+I[n[e+15]]}(o)},x=function(){const n=[];return{getProjects:function(){return n.slice()},newProject:function(e,t){const o={name:e,id:y(),tasks:[],description:t};n.push(o)}}}();class v{constructor(n,e){this.title=n,this.id=y(),this.description=e}}function b(n,e,t){x.getProjects().forEach((o=>{if(o.id===n){const n=new v(e,t);o.tasks.push(n)}}))}function h(n,e){const t=document.createElement("div");return t.className=n,t.innerHTML=e,t}function k(n){const e=x.getProjects(),t=new DocumentFragment;return e.forEach((e=>{e.id===n&&e.tasks.forEach((n=>{const e=function(n,e){const t=document.createElement("div");return t.className="taskContainer",t.id=e,t}(0,n.id),o=h("taskTitle",n.title),r=h("taskDescription",n.description),a=function(){const n=document.createElement("button");return n.className="taskCloseButton",n.innerHTML="X",n.addEventListener("click",(()=>{var e;e=n.parentElement.id,x.getProjects().forEach((n=>{n.id===document.querySelector("#updateProjectTitle").className&&n.tasks.forEach(((t,o)=>{t.id===e&&(n.tasks.splice(o,1),document.getElementById(e).remove())}))}))})),n}();e.append(o),e.append(r),e.append(a),t.append(e)}))})),t}function w(n){const e=k(n);document.querySelector("#tasksUpdate").innerHTML="",document.querySelector("#tasksUpdate").append(e)}function j(){const n=document.querySelector("#taskProject");n.innerHTML="",x.getProjects().forEach((e=>{const t=document.createElement("option");t.value=e.id,t.textContent=e.name,n.appendChild(t)}))}function T(){const n=function(){const n=x.getProjects(),e=new DocumentFragment;return n.forEach((n=>{const t=function(n,e){const t=document.createElement("button");return t.className="project",t.id=e,t.innerHTML=n,t}(n.name,n.id);t.addEventListener("click",(()=>{document.querySelector("#updateProjectTitle").innerHTML=n.name,document.querySelector("#updateProjectTitle").className=n.id,document.querySelector("#updateProjectDescription").innerHTML=n.description,w(n.id)})),e.append(t)})),e}();document.querySelector("#projects").innerHTML="",document.querySelector("#projects").append(n)}document.querySelector(".tog").addEventListener("click",(()=>{document.body.classList.toggle("dark")})),document.querySelector("#newTask").addEventListener("click",(()=>{})),document.querySelector("#newTask").addEventListener("click",(()=>{document.querySelector("#newTaskModal").showModal()})),document.querySelector("#newTaskModal>.modal-container>.close-button").addEventListener("click",(()=>{document.querySelector("#newTaskModal").close()})),document.querySelector("#newProject").addEventListener("click",(()=>{document.querySelector("#newProjectModal").showModal()})),document.querySelector("#newProjectModal>.modal-container>.close-button").addEventListener("click",(()=>{document.querySelector("#newProjectModal").close()})),document.querySelector("#addProjectButton").addEventListener("click",(()=>{let n=document.querySelector("#projectTitle"),e=document.querySelector("#projectDescription");if(""==n.value||""==e.value)return!1;x.newProject(n.value,e.value),T(),j(),document.querySelector("#newProjectModal").close()})),document.getElementById("newProjectModal").addEventListener("close",(()=>{document.querySelector("#projectForm").reset()})),document.querySelector("#addTaskButton").addEventListener("click",(()=>{let n=document.querySelector("#taskTitle"),e=document.querySelector("#taskDescription"),t=document.querySelector("#taskProject");if(""==n.value||""==e.value)return!1;x.getProjects().forEach((o=>{o.id===t.value&&(b(o.id,n.value,e.value),w(o.id),document.querySelector("#updateProjectTitle").innerHTML=o.name,document.querySelector("#updateProjectDescription").innerHTML=o.description)}))})),document.getElementById("newTaskModal").addEventListener("close",(()=>{document.querySelector("#taskForm").reset()})),x.newProject("General","This is where the description goes"),document.querySelector("#updateProjectTitle").innerHTML=x.getProjects()[0].name,document.querySelector("#updateProjectDescription").innerHTML=x.getProjects()[0].description,document.querySelector("#updateProjectTitle").className=x.getProjects()[0].id,b(x.getProjects()[0].id,"This is where Task Titles Go","This is where Task descriptions go"),b(x.getProjects()[0].id,"This is where Task Titles Go2","This is where Task descriptions go2"),T(),j(),w(x.getProjects()[0].id)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,