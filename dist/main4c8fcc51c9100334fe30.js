(()=>{"use strict";var e={365:(e,n,t)=>{t.d(n,{A:()=>c});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,"/* * {\n    outline: red solid 1px;\n}     */\nbody{\n    --backgroundColor : #f7fffe;\n    --textColor : #2a2e44;\n    --accentColor : #c9c9c9;\n    --accentColorTwo : #d3d3d2;\n    --transition-delay : 1s;\n    /* #cec2e7*/\n    transition: var(--transition-delay);  \n    \n    height: 100vh;\n    font-size: 18px;\n    margin: 0;\n    \n    background-color: var(--backgroundColor);\n    color: var(--textColor);\n    \n}\n.dark{\n    --backgroundColor : #2c3e50;\n    --textColor : #F5F5F5;\n    --accentColor : #c9c9c9;\n    --accentColorTwo : #5a41a5;\n    \n}\nbutton {\n    background-color: var(--backgroundColor);\n    color: var(--textColor);\n    border: none;\n    padding:  clamp(0px,5px,10px);\n    border-radius: 16px;\n    cursor: pointer;\n}\n.mainContainer {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: .15fr repeat(4, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 0px;\n    height: 100%;\n}\n.sidebar { \n    grid-area: 1 / 1 / 6 / 2;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5%;\n    background-color: var(--accentColor);\n}\n.header { \n    grid-area: 1 / 1 / 2 / 6; \n    background-color: var(--accentColorTwo);\n}\n.mainSection { \n    grid-area: 1 / 2 / 6 / 6; \n    color: #16161a;\n    display: flex;\n    flex-direction: column;\n    padding: 2%;\n    gap: 5px;\n}\n#updateProjectTitle{\n    font-size: 2rem;\n    font-weight: bold;\n}\n#updateProjectDescription{\n    font-size: 1rem;\n    margin-left: ;\n}\n.projectTitleArea{\n    background-color: var(--accentColor);\n    border-radius: 16px;\n    padding-left: 20px;\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n.highPrio{\n    outline: solid 3px red;\n}\n.normalPrio{\n    outline: solid 3px orange;\n}\n.lowPrio{\n    outline: solid 3px blue;\n}\n.taskContainer{\n    display: grid;\n    grid-template-columns: 35px 4fr 35px;\n    grid-template-rows: repeat(4, 1fr);\n    row-gap: 2px;\n    padding: 5px;\n    background-color: var(--accentColor);\n    align-items: center;\n    border-radius: 16px;\n}\n.taskTitle{\n    font-size: min(.9rem,2rem,3rem);\n    grid-area: 1 / 2 / 2 / 3; \n    font-weight: bold;\n}\n.taskDescription{\n    font-size: 1rem;\n    grid-area: 2 / 2 / 3 / 3;;\n}\n.taskCloseButton{\n    background-color: var(--backgroundColor);\n    grid-area: 2 / 1 / 4 / 2;\n    height: 70%;\n    width: clamp(35px, 30%, 50% );\n    align-self: center;\n    justify-self: center;\n    margin-right: 15px;\n    margin-left: 8px;\n    height: 50px;\n    position: relative;\n    bottom: 50%;\n}\n.editTaskButton{\n    grid-area: 2 / 3 / 4 / 4; \n    height: 70%;\n    width: clamp(35px, 30%, 100px);\n    height: 50px;\n    background-color: var(--backgroundColor);\n    align-self: center;\n    justify-self: center;\n    position: relative;\n    bottom: 50%;\n}\n#tasksUpdate{\n    margin-top: 4%;\n    display: flex;\n    flex-direction: column;\n    gap: 2.5rem;\n}\n.options{\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n}\n.sidebarSection{\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.largeText{\n    font-size: clamp(.5rem,1.15rem,1.25);\n    font-weight: bold;\n    align-self: center;\n}\n.project{\n    grid-area: 1 / 1 / 2 / 2;\n    font-size: min(100%,3vw) ;\n}\n.modal {\n    padding: 2em;\n    /* max-width: 60ch; */\n    width: clamp(10%, 70ch, 80%);\n    border: 0;\n    box-shadow: 0 0 1em rgb(0 0 0 / .3);\n    position: relative;\n}\n.modal-container{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.modal-container>.close-button{\n    position: relative;\n    left: 35%;\n    bottom: 2vh;\n}\n.form{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 16px;\n}\n.formContainer{\n    display: flex;\n    gap: 10px;\n}\ninput,#taskPriority,#taskProject {\n    margin-left:10px ;\n}\n.priorityNormal{\n    border: orange solid 3px;\n}\n.priorityHigh{\n    border: red solid 3px;\n}\n.priorityLow{\n    border: blue solid 3px;\n}\n.projectSideBarContainer{\n    display: grid;\n    grid-template-columns: 70% 5% 20%;\n    grid-template-rows: 1fr;\n}\n.removeProject{\n    grid-area: 1 / 3 / 2 / 4;\n    text-align: center;\n    margin: auto;\n   position: relative;\n   left: 20%;\n}\n.taskDueDate{\n    font-size: 1rem;\n    grid-area: 3 / 2 / 4 / 4;\n}\n.taskPriority{\n    grid-area: 4 / 2 / 5 / 3;\n    font-size: 1rem;\n}\nform > button{\n    background-color:#2c3e50;\n    color:#f7fffe;\n}\n.projectList{\n    color: #16161a;\n}\n#sidebarOne{\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    text-align: center;\n}\n#sidebarOne > div > button{\n    width: 70%;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;;OAEO;AACP;IACI,2BAA2B;IAC3B,qBAAqB;IACrB,uBAAuB;IACvB,0BAA0B;IAC1B,uBAAuB;IACvB,WAAW;IACX,mCAAmC;;IAEnC,aAAa;IACb,eAAe;IACf,SAAS;;IAET,wCAAwC;IACxC,uBAAuB;;AAE3B;AACA;IACI,2BAA2B;IAC3B,qBAAqB;IACrB,uBAAuB;IACvB,0BAA0B;;AAE9B;AACA;IACI,wCAAwC;IACxC,uBAAuB;IACvB,YAAY;IACZ,6BAA6B;IAC7B,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,aAAa;IACb,qCAAqC;IACrC,wCAAwC;IACxC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AAChB;AACA;IACI,wBAAwB;IACxB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,oCAAoC;AACxC;AACA;IACI,wBAAwB;IACxB,uCAAuC;AAC3C;AACA;IACI,wBAAwB;IACxB,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,QAAQ;AACZ;AACA;IACI,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,eAAe;IACf,aAAa;AACjB;AACA;IACI,oCAAoC;IACpC,mBAAmB;IACnB,kBAAkB;IAClB,gBAAgB;IAChB,mBAAmB;AACvB;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,aAAa;IACb,oCAAoC;IACpC,kCAAkC;IAClC,YAAY;IACZ,YAAY;IACZ,oCAAoC;IACpC,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,wBAAwB;IACxB,iBAAiB;AACrB;AACA;IACI,eAAe;IACf,wBAAwB;AAC5B;AACA;IACI,wCAAwC;IACxC,wBAAwB;IACxB,WAAW;IACX,6BAA6B;IAC7B,kBAAkB;IAClB,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,kBAAkB;IAClB,WAAW;AACf;AACA;IACI,wBAAwB;IACxB,WAAW;IACX,8BAA8B;IAC9B,YAAY;IACZ,wCAAwC;IACxC,kBAAkB;IAClB,oBAAoB;IACpB,kBAAkB;IAClB,WAAW;AACf;AACA;IACI,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;AACA;IACI,oCAAoC;IACpC,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,wBAAwB;IACxB,yBAAyB;AAC7B;AACA;IACI,YAAY;IACZ,qBAAqB;IACrB,4BAA4B;IAC5B,SAAS;IACT,mCAAmC;IACnC,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;AACf;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,2BAA2B;IAC3B,SAAS;AACb;AACA;IACI,aAAa;IACb,SAAS;AACb;AACA;IACI,iBAAiB;AACrB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,qBAAqB;AACzB;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,aAAa;IACb,iCAAiC;IACjC,uBAAuB;AAC3B;AACA;IACI,wBAAwB;IACxB,kBAAkB;IAClB,YAAY;GACb,kBAAkB;GAClB,SAAS;AACZ;AACA;IACI,eAAe;IACf,wBAAwB;AAC5B;AACA;IACI,wBAAwB;IACxB,eAAe;AACnB;AACA;IACI,wBAAwB;IACxB,aAAa;AACjB;AACA;IACI,cAAc;AAClB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,oBAAoB;IACpB,kBAAkB;AACtB;AACA;IACI,UAAU;AACd",sourcesContent:["/* * {\n    outline: red solid 1px;\n}     */\nbody{\n    --backgroundColor : #f7fffe;\n    --textColor : #2a2e44;\n    --accentColor : #c9c9c9;\n    --accentColorTwo : #d3d3d2;\n    --transition-delay : 1s;\n    /* #cec2e7*/\n    transition: var(--transition-delay);  \n    \n    height: 100vh;\n    font-size: 18px;\n    margin: 0;\n    \n    background-color: var(--backgroundColor);\n    color: var(--textColor);\n    \n}\n.dark{\n    --backgroundColor : #2c3e50;\n    --textColor : #F5F5F5;\n    --accentColor : #c9c9c9;\n    --accentColorTwo : #5a41a5;\n    \n}\nbutton {\n    background-color: var(--backgroundColor);\n    color: var(--textColor);\n    border: none;\n    padding:  clamp(0px,5px,10px);\n    border-radius: 16px;\n    cursor: pointer;\n}\n.mainContainer {\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: .15fr repeat(4, 1fr);\n    grid-column-gap: 0px;\n    grid-row-gap: 0px;\n    height: 100%;\n}\n.sidebar { \n    grid-area: 1 / 1 / 6 / 2;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5%;\n    background-color: var(--accentColor);\n}\n.header { \n    grid-area: 1 / 1 / 2 / 6; \n    background-color: var(--accentColorTwo);\n}\n.mainSection { \n    grid-area: 1 / 2 / 6 / 6; \n    color: #16161a;\n    display: flex;\n    flex-direction: column;\n    padding: 2%;\n    gap: 5px;\n}\n#updateProjectTitle{\n    font-size: 2rem;\n    font-weight: bold;\n}\n#updateProjectDescription{\n    font-size: 1rem;\n    margin-left: ;\n}\n.projectTitleArea{\n    background-color: var(--accentColor);\n    border-radius: 16px;\n    padding-left: 20px;\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n.highPrio{\n    outline: solid 3px red;\n}\n.normalPrio{\n    outline: solid 3px orange;\n}\n.lowPrio{\n    outline: solid 3px blue;\n}\n.taskContainer{\n    display: grid;\n    grid-template-columns: 35px 4fr 35px;\n    grid-template-rows: repeat(4, 1fr);\n    row-gap: 2px;\n    padding: 5px;\n    background-color: var(--accentColor);\n    align-items: center;\n    border-radius: 16px;\n}\n.taskTitle{\n    font-size: min(.9rem,2rem,3rem);\n    grid-area: 1 / 2 / 2 / 3; \n    font-weight: bold;\n}\n.taskDescription{\n    font-size: 1rem;\n    grid-area: 2 / 2 / 3 / 3;;\n}\n.taskCloseButton{\n    background-color: var(--backgroundColor);\n    grid-area: 2 / 1 / 4 / 2;\n    height: 70%;\n    width: clamp(35px, 30%, 50% );\n    align-self: center;\n    justify-self: center;\n    margin-right: 15px;\n    margin-left: 8px;\n    height: 50px;\n    position: relative;\n    bottom: 50%;\n}\n.editTaskButton{\n    grid-area: 2 / 3 / 4 / 4; \n    height: 70%;\n    width: clamp(35px, 30%, 100px);\n    height: 50px;\n    background-color: var(--backgroundColor);\n    align-self: center;\n    justify-self: center;\n    position: relative;\n    bottom: 50%;\n}\n#tasksUpdate{\n    margin-top: 4%;\n    display: flex;\n    flex-direction: column;\n    gap: 2.5rem;\n}\n.options{\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n}\n.sidebarSection{\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n}\n#projects{\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n}\n.largeText{\n    font-size: clamp(.5rem,1.15rem,1.25);\n    font-weight: bold;\n    align-self: center;\n}\n.project{\n    grid-area: 1 / 1 / 2 / 2;\n    font-size: min(100%,3vw) ;\n}\n.modal {\n    padding: 2em;\n    /* max-width: 60ch; */\n    width: clamp(10%, 70ch, 80%);\n    border: 0;\n    box-shadow: 0 0 1em rgb(0 0 0 / .3);\n    position: relative;\n}\n.modal-container{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.modal-container>.close-button{\n    position: relative;\n    left: 35%;\n    bottom: 2vh;\n}\n.form{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    gap: 16px;\n}\n.formContainer{\n    display: flex;\n    gap: 10px;\n}\ninput,#taskPriority,#taskProject {\n    margin-left:10px ;\n}\n.priorityNormal{\n    border: orange solid 3px;\n}\n.priorityHigh{\n    border: red solid 3px;\n}\n.priorityLow{\n    border: blue solid 3px;\n}\n.projectSideBarContainer{\n    display: grid;\n    grid-template-columns: 70% 5% 20%;\n    grid-template-rows: 1fr;\n}\n.removeProject{\n    grid-area: 1 / 3 / 2 / 4;\n    text-align: center;\n    margin: auto;\n   position: relative;\n   left: 20%;\n}\n.taskDueDate{\n    font-size: 1rem;\n    grid-area: 3 / 2 / 4 / 4;\n}\n.taskPriority{\n    grid-area: 4 / 2 / 5 / 3;\n    font-size: 1rem;\n}\nform > button{\n    background-color:#2c3e50;\n    color:#f7fffe;\n}\n.projectList{\n    color: #16161a;\n}\n#sidebarOne{\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    text-align: center;\n}\n#sidebarOne > div > button{\n    width: 70%;\n}"],sourceRoot:""}]);const c=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var A=e[c],d=r.base?A[0]+r.base:A[0],l=a[d]||0,s="".concat(d," ").concat(l);a[d]=l+1;var u=t(s),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var C=o(p,r);r.byIndex=c,n.splice(c,0,{identifier:s,updater:C,references:1})}i.push(s)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var A=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=A}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),r=t(825),o=t.n(r),a=t(659),i=t.n(a),c=t(56),A=t.n(c),d=t(540),l=t.n(d),s=t(113),u=t.n(s),p=t(365),C={};C.styleTagTransform=u(),C.setAttributes=A(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),n()(p.A,C),p.A&&p.A.locals&&p.A.locals;const m={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let B;const f=new Uint8Array(16);function g(){if(!B&&(B="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!B))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return B(f)}const I=[];for(let e=0;e<256;++e)I.push((e+256).toString(16).slice(1));const y=function(e,n,t){if(m.randomUUID&&!n&&!e)return m.randomUUID();const r=(e=e||{}).random||(e.rng||g)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,n){t=t||0;for(let e=0;e<16;++e)n[t+e]=r[e];return n}return function(e,n=0){return I[e[n+0]]+I[e[n+1]]+I[e[n+2]]+I[e[n+3]]+"-"+I[e[n+4]]+I[e[n+5]]+"-"+I[e[n+6]]+I[e[n+7]]+"-"+I[e[n+8]]+I[e[n+9]]+"-"+I[e[n+10]]+I[e[n+11]]+I[e[n+12]]+I[e[n+13]]+I[e[n+14]]+I[e[n+15]]}(r)};let x="",v="";const b=()=>v,k=e=>{x=e},h=e=>{v=e};function w(e,n){const t=document.createElement("div");return t.className=e,t.innerHTML=n,t}function j(e){const n=q.getProjects(),t=new DocumentFragment;return n.forEach((n=>{n.id===e&&n.tasks.forEach((e=>{const n=function(e,n){const t=document.createElement("div");return t.className="taskContainer",t.id=n,t}(0,e.id),r=w("taskTitle",e.title),o=w("taskDescription",e.description),a=function(){const e=document.createElement("button");return e.className="taskCloseButton",e.innerHTML="X",e.addEventListener("click",(()=>{var n;n=e.parentElement.id,q.getProjects().forEach((e=>{e.id===document.querySelector("#updateProjectTitle").className&&e.tasks.forEach(((t,r)=>{t.id===n&&(e.tasks.splice(r,1),document.getElementById(n).remove())}))}))})),e}(),i=function(){const e=document.createElement("button");return e.className="editTaskButton",e.innerHTML="Edit",e.addEventListener("click",(e=>{const n=e.target.parentNode.id;h(n),document.querySelector("#editTaskModal").showModal()})),e}(),c=w("taskDueDate","Due Date: "+e.dueDate);let A=e.priority;"priorityNormal"==e.priority&&(A="Normal Priority"),"priorityHigh"==e.priority&&(A="High Priority"),"priorityLow"==e.priority&&(A="Low Priority");const d=w("taskPriority",A);n.classList.add(e.priority),n.append(r),n.append(o),n.append(a),n.append(i),n.append(c),n.append(d),t.append(n)}))})),t}function S(e){const n=j(e);document.querySelector("#tasksUpdate").innerHTML="",document.querySelector("#tasksUpdate").append(n)}function T(){const e=document.querySelector("#taskProject");e.innerHTML="",q.getProjects().forEach((n=>{const t=document.createElement("option");t.value=n.id,t.textContent=n.name,e.appendChild(t)}))}function P(){const e=function(){const e=q.getProjects(),n=new DocumentFragment;return e.forEach((e=>{const t=function(e){const n=document.createElement("div");return n.className="projectSideBarContainer",n}(),r=function(e,n){const t=document.createElement("button");return t.className="project",t.id=n,t.innerHTML=e,t}(e.name,e.id);r.addEventListener("click",(()=>{document.querySelector("#updateProjectTitle").innerHTML=e.name,document.querySelector("#updateProjectTitle").className=e.id,document.querySelector("#updateProjectDescription").innerHTML=e.description,k(e.id),S(e.id)}));const o=function(e,n){const t=document.createElement("button");return t.className="removeProject",t.innerHTML="X",t}();o.addEventListener("click",(()=>{let e=o.previousElementSibling.id;q.removeProject(e)})),t.append(r),t.append(o),n.append(t)})),n}();document.querySelector("#projects").innerHTML="",document.querySelector("#projects").append(e)}const q=function(){const e=[];return{getProjects:function(){return e.slice()},newProject:function(n,t){const r={name:n,id:y(),tasks:[],description:t};e.push(r)},removeProject:function(n){e.forEach(((t,r)=>{t.id===n&&(e.splice(r,1),P(),T(),document.querySelectorAll(".taskContainer").forEach((e=>e.remove())),0===e.length?(document.querySelector("#updateProjectTitle").innerHTML="Make a New Project",document.querySelector("#updateProjectDescription").innerHTML=""):(document.querySelector("#updateProjectTitle").innerHTML=e[0].name,document.querySelector("#updateProjectDescription").innerHTML=e[0].description,document.querySelector(".projectTitleArea").firstChild.className=e[0].id,S(e[0].id)))}))}}}();class E{constructor(e,n,t,r){this.title=e,this.id=y(),this.description=n,this.priority=t,this.dueDate=r}}function L(e,n,t,r,o){q.getProjects().forEach((a=>{if(a.id===e){const e=new E(n,t,r,o);a.tasks.push(e)}}))}document.querySelector(".tog").addEventListener("click",(()=>{document.body.classList.toggle("dark")})),document.querySelector("#newTask").addEventListener("click",(()=>{})),document.querySelector("#newTask").addEventListener("click",(()=>{document.querySelector("#newTaskModal").showModal()})),document.querySelector("#newTaskModal>.modal-container>.close-button").addEventListener("click",(()=>{document.querySelector("#newTaskModal").close()})),document.querySelector("#newProject").addEventListener("click",(()=>{document.querySelector("#newProjectModal").showModal()})),document.querySelector("#newProjectModal>.modal-container>.close-button").addEventListener("click",(()=>{document.querySelector("#newProjectModal").close()})),document.querySelector("#addProjectButton").addEventListener("click",(()=>{let e=document.querySelector("#projectTitle"),n=document.querySelector("#projectDescription");if(""==e.value||""==n.value)return!1;q.newProject(e.value,n.value),P(),T(),document.querySelector("#newProjectModal").close()})),document.getElementById("newProjectModal").addEventListener("close",(()=>{document.querySelector("#projectForm").reset()})),document.querySelector("#addTaskButton").addEventListener("click",(()=>{let e=document.querySelector("#taskTitle"),n=document.querySelector("#taskDescription"),t=document.querySelector("#taskProject"),r=document.querySelector("#taskPriority"),o=document.querySelector("#taskDueDate");if(""==e.value||""==n.value)return!1;console.log(o.value),q.getProjects().forEach((a=>{a.id===t.value&&(L(a.id,e.value,n.value,r.value,o.value),S(a.id),document.querySelector("#updateProjectTitle").className=t.value,document.querySelector("#updateProjectTitle").innerHTML=a.name,document.querySelector("#updateProjectDescription").innerHTML=a.description)}))})),document.getElementById("newTaskModal").addEventListener("close",(()=>{document.querySelector("#taskForm").reset()})),q.newProject("General","This is where the description goes"),document.querySelector("#updateProjectTitle").innerHTML=q.getProjects()[0].name,document.querySelector("#updateProjectDescription").innerHTML=q.getProjects()[0].description,document.querySelector("#updateProjectTitle").className=q.getProjects()[0].id,k(q.getProjects()[0].id);let M=new Date,D=String(M.getDate()).padStart(2,"0"),N=String(M.getMonth()+1).padStart(2,"0"),H=M.getFullYear()+"-"+N+"-"+D;L(q.getProjects()[0].id,"This is where Task Titles Go","This is where Task descriptions go","priorityNormal",H),P(),T(),S(q.getProjects()[0].id),document.getElementById("editTaskModal").addEventListener("close",(()=>{document.querySelector("#editTaskForm").reset()})),document.querySelector("#editTaskModal>.modal-container>.close-button").addEventListener("click",(()=>{document.querySelector("#editTaskModal").close()})),document.getElementById("editTaskButtonForm").addEventListener("click",(()=>{let e=document.querySelector("#editTaskTitle").value,n=document.querySelector("#editTaskDescription").value,t=document.querySelector("#editTaskPriority").value;if(""==e||""==n)return!1;!function(e,n,t,r,o){q.getProjects().forEach((a=>{a.id===r&&a.tasks.forEach((r=>{r.id===o&&(r.title=e,r.description=n,r.priority=t)}))}))}(e,n,t,document.querySelector("#updateProjectTitle").className,b());const r=document.getElementById(b());q.getProjects().forEach((e=>{e.id===document.querySelector("#updateProjectTitle".className)&&e.tasks.forEach((e=>{e.id===b()&&(r.querySelector(".taskTitle").innerHTML=e.title,r.querySelector(".taskDescription").innerHTML=e.description)}))})),S(document.querySelector("#updateProjectTitle").className)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,